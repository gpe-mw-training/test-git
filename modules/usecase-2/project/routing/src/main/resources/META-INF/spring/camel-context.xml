<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:cxf="http://camel.apache.org/schema/cxf"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://camel.apache.org/schema/cxf
       http://camel.apache.org/schema/cxf/camel-cxf-spring.xsd
       http://camel.apache.org/schema/spring
       http://camel.apache.org/schema/spring/camel-spring.xsd">

    <!-- H2 DB -->
    <bean id="usecaseDB" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="org.h2.Driver"/>
        <property name="url" value="jdbc:h2:tcp://localhost/~/usecaseDB"/>
        <property name="username" value="sa"/>
        <property name="password" value=""/>
    </bean>

    <!-- SQL Component & Datasource -->
    <bean id="sql" class="org.apache.camel.component.sql.SqlComponent">

    </bean>

    <cxf:cxfEndpoint id="customerWebService" address="http://localhost:9090/ws/customerService"
                     serviceClass="org.fuse.usecase.service.CustomerWS"
                     loggingFeatureEnabled="true">
    </cxf:cxfEndpoint>

    <cxf:rsServer id="customerRestService" address="http://localhost:9191/rest"
                  serviceClass="org.fuse.usecase.service.CustomerRest"
                  loggingFeatureEnabled="false">

    </cxf:rsServer>

    <cxf:rsClient id="customerRestServiceClient" address="http://localhost:9191/rest"
                  loggingFeatureEnabled="false" serviceClass="org.fuse.usecase.service.CustomerRest">

    </cxf:rsClient>

    <bean id="reconcileData" class="org.fuse.usecase.AccountAggregator"/>
    <bean id="customerWSImplBean" class="org.fuse.usecase.service.CustomerWSImpl"/>
    <bean id="customerRestImplBean" class="org.fuse.usecase.service.CustomerRestImpl"/>
    <bean id="processorBean" class="org.fuse.usecase.ProcessorBean"/>

    <camelContext trace="false" xmlns="http://camel.apache.org/schema/spring">
        <propertyPlaceholder id="properties" location="fabric8/route.properties"/>
        <!--
             Transformation Endpoint doing csv2java conversion
             Step 1 : csv record is converted java using camel bindy
             Step 2 : Dozer transformation of Customer to Account
             Step 3 : Java to Json conversion using json jackson
        -->
        <endpoint
                uri="dozer:csv2json?sourceModel=org.acme.Customer&amp;targetModel=org.globex.Account&amp;marshalId=json&amp;unmarshalId=csv&amp;mappingFile=transformation.xml"
                id="csv2json"/>

        <!-- CSV Input & JSon OutPut DataFormat -->
        <dataFormats>
            <bindy id="csv" type="Csv" classType="org.acme.Customer"/>
            <json id="json" library="Jackson"/>
        </dataFormats>

        <!-- Route Definition CSV to JSON -->
        <route>
            <!-- Consume files from input directory -->
            <from uri="file:{{fileInput}}?fileName=customers.csv&amp;noop=true"/>
            <onException>
                <exception>java.lang.IllegalArgumentException</exception>
                <handled>
                    <constant>true</constant>
                </handled>
                <to uri="file:{{fileError}}?fileName=csv-record-${date:now:yyyyMMdd}.txt"/>
            </onException>
            <split>
                <tokenize token="\n"/>
                <to ref="csv2json"/>
                <to uri="file:{{fileOutput}}?fileName=account-${property.CamelSplitIndex}.json"/>
            </split>
        </route>

        <!-- Multicast the account to the REST & WS to aggregate the result -->
        <route>
            <from uri="file:{{fileOutput}}"/>
        </route>

        <!-- REST Service -->
        <route>

        </route>

        <!-- WebService -->
        <route>

        </route>

        <!-- Call WebService Client -->
        <route>

        </route>

        <!-- Call REST Client -->
        <route>

        </route>

        <!-- Insert Records -->
        <route>

        </route>

    </camelContext>
</beans>